#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <6 7>;
        };

        kana {
            bindings = <&kp LANG1>;
            key-positions = <13 12>;
        };

        kanaoff {
            bindings = <&kp LANG2>;
            key-positions = <24 25>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
        };

        spece {
            bindings = <&kp SPACE>;
            key-positions = <30 31>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <7 8>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W         &kp E         &kp R                 &kp T                                                      &kp Y        &kp U    &lt 5 I    &kp O    &kp P
&kp A        &kp S         &kp D         &lt 4 F               &kp G        &kp ESC                      &lt 2 MINUS      &kp H        &lt 2 J  &kp K      &kp L    &lt_to_layer_0 4 SQT
&mt LCTRL Z  &kp X         &kp C         &kp V                 &kp B        &lt 1 GRAVE                  &lt 3 SEMICOLON  &kp N        &kp M    &kp COMMA  &kp DOT  &mt RCTRL SLASH
&kp LSHFT    &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 TAB  &lt 2 SPACE  &lt_to_layer_0 3 DELETE      &kp BACKSPACE    &lt 1 ENTER                               &kp RSHFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp F1   &kp F2   &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp F11  &kp F12  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        NUM {
            bindings = <
&kp ASTRK  &kp N7  &kp N8  &kp N9        &kp PLUS                           &kp CARET         &kp AMPERSAND      &kp ASTRK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH  &kp N4  &kp N5  &kp N6        &kp MINUS   &trans         &trans  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&kp N0     &kp N1  &kp N2  &kp NUMBER_3  &kp PERIOD  &kp EQUAL      &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans     &trans  &trans  &trans        &trans      &trans         &trans  &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&trans   &kp HOME         &kp UP_ARROW    &kp END          &trans                             &trans  &trans  &trans  &trans  &trans
&kp ESC  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_UP    &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp PRINTSCREEN  &kp LANG2       &kp LANGUAGE_1   &kp PAGE_DOWN  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans           &trans          &trans           &trans         &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
